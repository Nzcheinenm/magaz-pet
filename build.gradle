plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ru.pet'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootRun {
	args = ["--spring.profiles.active=local"]
	jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.suppressGeneratorTimestamp=true',
			'-Amapstruct.suppressGeneratorVersionInfoComment=true',
			'-Amapstruct.verbose=true',
			'-Amapstruct.unmappedTargetPolicy=ERROR',
			'-Amapstruct.defaultComponentModel=spring'
	]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//database
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework:spring-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.postgresql', name: 'r2dbc-postgresql', version: '1.0.1.RELEASE'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.6'

	// spring boot
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation "org.springframework.boot:spring-boot-starter-data-redis-reactive"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	compileOnly 'org.projectlombok:lombok-maven-plugin:1.18.20.0'

	//migration
	implementation 'org.liquibase:liquibase-core'
	implementation group: 'net.lbruun.springboot', name: 'preliquibase-spring-boot-starter', version: '1.4.0'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'

	//bucket4j
	implementation "com.bucket4j:bucket4j-core:${bucket4jRedisVersion}"

	// monitoring
	implementation "org.springframework.boot:spring-boot-starter-actuator"

	// mapstruct
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	// apache utils
	implementation "org.apache.commons:commons-collections4:${apacheCommonsCollectionsVersion}"

	// kafka
	implementation "io.projectreactor.kafka:reactor-kafka:${reactorKafkaVersion}"
	implementation 'org.springframework.kafka:spring-kafka'

	//open-api
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'

	//swagger
	implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"

	//java server faces
	implementation("org.thymeleaf:thymeleaf-spring5:3.1.3.RELEASE")
	implementation("org.thymeleaf:thymeleaf:3.1.3.RELEASE")
	implementation("org.springframework.boot:spring-boot-starter-thymeleaf:3.3.6")

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-inline:3.11.0'
	testImplementation "org.testcontainers:junit-jupiter:1.20.4"
	testImplementation 'org.testcontainers:postgresql:1.20.4'
	testImplementation 'org.testcontainers:testcontainers:1.20.4'
	testImplementation 'org.testcontainers:kafka:1.20.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
